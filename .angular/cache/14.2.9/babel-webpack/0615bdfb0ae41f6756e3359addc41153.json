{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router, afAuth) {\n      this.router = router;\n      this.afAuth = afAuth;\n      this.userLoggedIn = false;\n      this.afAuth.onAuthStateChanged(user => {\n        if (user) {\n          this.userLoggedIn = true;\n        } else {\n          this.userLoggedIn = false;\n        }\n      });\n    }\n\n    loginUser(email, password) {\n      return this.afAuth.signInWithEmailAndPassword(email, password).then(() => {\n        console.log('Auth Service: loginUser: success'); // this.router.navigate(['/dashboard']);\n      }).catch(error => {\n        console.log('Auth Service: login error...');\n        console.log('error code', error.code);\n        console.log('error', error);\n        if (error.code) return {\n          isValid: false,\n          message: error.message\n        };\n      });\n    }\n\n    signupUser(user) {\n      return this.afAuth.createUserWithEmailAndPassword(user.email, user.password).then(result => {\n        let emailLower = user.email.toLowerCase();\n        result.user.sendEmailVerification(); // immediately send the user a verification email\n      }).catch(error => {\n        console.log('Auth Service: signup error', error);\n        if (error.code) return {\n          isValid: false,\n          message: error.message\n        };\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}