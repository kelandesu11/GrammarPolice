{"ast":null,"code":"import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/firefireStore.service\";\nexport let PassivevoiceService = /*#__PURE__*/(() => {\n  class PassivevoiceService {\n    constructor(testFireBase) {\n      this.testFireBase = testFireBase;\n      this.passiveVoiceAlertColorSource = new BehaviorSubject(\" \");\n      this.currentPassiveVoiceAlertColor = this.passiveVoiceAlertColorSource.asObservable();\n      this.passiveVoiceFeedbackSource = new BehaviorSubject(\" \");\n      this.currentPassiveVoiceFeedback = this.passiveVoiceFeedbackSource.asObservable();\n      this.passiveVoiceScoreSource = new BehaviorSubject(0);\n      this.currentPassiveVoiceScore = this.passiveVoiceScoreSource.asObservable(); // Passive Voice Number of Errors\n\n      this.passiveVoiceNumberSource = new BehaviorSubject(0);\n      this.currentPassiveVoiceNumber = this.passiveVoiceNumberSource.asObservable(); // Passive Voice Error List\n\n      this.passiveVoiceTableSource = new BehaviorSubject(this.testFireBase.getPassiveVoice());\n      this.currentPassiveVoiceTable = this.passiveVoiceTableSource.asObservable(); // Passive Voice Helper List\n\n      this.passiveVoiceHelperTableSource = new BehaviorSubject({\n        ' is': '',\n        ' isn\\'t': '',\n        ' is not': '',\n        ' \\'s': '',\n        ' \\'s not': '',\n        ' are': '',\n        ' aren\\'t': '',\n        ' are not': '',\n        ' \\'re': '',\n        ' \\'re not': '',\n        ' was': '',\n        ' wasn\\'t': '',\n        ' was not': '',\n        ' were': '',\n        ' weren\\'t': '',\n        ' were not': '',\n        ' be': '',\n        ' being': '',\n        ' having': '',\n        ' been': ''\n      });\n      this.currentPassiveVoiceHelperTable = this.passiveVoiceHelperTableSource.asObservable(); // Passive Voice Current User Errors\n\n      this.passiveVoiceUserTableSource = new BehaviorSubject({});\n      this.currentPassiveVoiceUserTable = this.passiveVoiceUserTableSource.asObservable();\n    }\n\n    changePassiveVoiceAlertColor(passiveVoiceAlertColor) {\n      this.passiveVoiceAlertColorSource.next(passiveVoiceAlertColor);\n    }\n\n    changePassiveVoiceFeedback(passiveVoiceFeedback) {\n      this.passiveVoiceFeedbackSource.next(passiveVoiceFeedback);\n    }\n\n    changePassiveVoiceScore(passiveVoiceScore) {\n      this.passiveVoiceScoreSource.next(passiveVoiceScore);\n    }\n\n    changePassiveVoiceNumber(passiveVoiceNumber) {\n      this.passiveVoiceNumberSource.next(passiveVoiceNumber);\n    }\n\n    changePassiveVoiceTable(passiveVoiceTable) {\n      this.passiveVoiceTableSource.next(passiveVoiceTable);\n    }\n\n    changePassiveVoiceHelperTable(passiveVoiceHelperTable) {\n      this.passiveVoiceHelperTableSource.next(passiveVoiceHelperTable);\n    }\n\n    changePassiveVoiceUserTable(passiveVoiceUserTable) {\n      this.passiveVoiceUserTableSource.next(passiveVoiceUserTable);\n    }\n\n  }\n\n  PassivevoiceService.ɵfac = function PassivevoiceService_Factory(t) {\n    return new (t || PassivevoiceService)(i0.ɵɵinject(i1.FirebaseService));\n  };\n\n  PassivevoiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PassivevoiceService,\n    factory: PassivevoiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return PassivevoiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}