{"ast":null,"code":"import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/firefireStore.service\";\nexport let GrammarService = /*#__PURE__*/(() => {\n  class GrammarService {\n    constructor(testFireBase) {\n      this.testFireBase = testFireBase; //variables for grammar\n\n      this.grammarAlertColor = new BehaviorSubject(\" \");\n      this.currentGrammarAlertColor = this.grammarAlertColor.asObservable();\n      this.grammarFeedback = new BehaviorSubject(\" \");\n      this.currentGrammarFeedback = this.grammarFeedback.asObservable();\n      this.grammarScore = new BehaviorSubject(0);\n      this.currentGrammarScore = this.grammarScore.asObservable();\n      this.totalGrammar = new BehaviorSubject(0);\n      this.currentTotalGrammar = this.totalGrammar.asObservable(); //this table contains all of the grammartrap words and its fix\n\n      this.grammarTable = new BehaviorSubject(this.testFireBase.getGrammar());\n      this.currentGrammarTable = this.grammarTable.asObservable(); // this table will contain the user's grammartrap words\n\n      this.grammarUserTable = new BehaviorSubject({});\n      this.currentGrammarUserTable = this.grammarUserTable.asObservable();\n    }\n\n    changeTotalGrammar(totalGrammar) {\n      this.totalGrammar.next(totalGrammar);\n    }\n\n    changeGrammarTable(table) {\n      this.grammarTable.next(table);\n    }\n\n    changeGrammarUserTable(grammarUserTable) {\n      this.grammarUserTable.next(grammarUserTable);\n    }\n\n    changeGrammarFeedback(grammarFeedback) {\n      this.grammarFeedback.next(grammarFeedback);\n    }\n\n    changeGrammarAlertColor(grammarAlertColor) {\n      this.grammarAlertColor.next(grammarAlertColor);\n    }\n\n    changeGrammarScore(grammarScore) {\n      this.grammarScore.next(grammarScore);\n    }\n\n  }\n\n  GrammarService.ɵfac = function GrammarService_Factory(t) {\n    return new (t || GrammarService)(i0.ɵɵinject(i1.FirebaseService));\n  };\n\n  GrammarService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GrammarService,\n    factory: GrammarService.ɵfac,\n    providedIn: 'root'\n  });\n  return GrammarService;\n})();","map":null,"metadata":{},"sourceType":"module"}