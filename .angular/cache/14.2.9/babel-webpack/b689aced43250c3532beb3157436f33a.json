{"ast":null,"code":"import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/firefireStore.service\";\nexport let AcademicStyleService = /*#__PURE__*/(() => {\n  class AcademicStyleService {\n    constructor(testFireBase) {\n      this.testFireBase = testFireBase; //variables for non academic style scoring\n\n      this.academicStyleAlertColor = new BehaviorSubject(\" \");\n      this.currentAcademicStyleAlertColor = this.academicStyleAlertColor.asObservable();\n      this.academicStyleFeedback = new BehaviorSubject(\" \");\n      this.currentAcademicStyleFeedback = this.academicStyleFeedback.asObservable();\n      this.academicStyleScore = new BehaviorSubject(0);\n      this.currentAcademicStyleScore = this.academicStyleScore.asObservable();\n      this.totalNonAcademic = new BehaviorSubject(0);\n      this.currentTotalNonAcademic = this.totalNonAcademic.asObservable(); // Non Academic Style Error List\n\n      this.academicStyleTableSource = new BehaviorSubject(this.testFireBase.getAcademicStyles() // casual language & feedback\n      );\n      this.currentAcademicStyleTable = this.academicStyleTableSource.asObservable(); // nonAcademic Style Current User Errors\n\n      this.academicStyleUserTableSource = new BehaviorSubject({});\n      this.currentAcademicStyleUserTable = this.academicStyleUserTableSource.asObservable();\n    }\n\n    changeAcademicStyleScore(academicStyleScore) {\n      this.academicStyleScore.next(academicStyleScore);\n    }\n\n    changeTotalNonAcademic(totalNonAcademic) {\n      this.totalNonAcademic.next(totalNonAcademic);\n    }\n\n    changeAcademicStyleTable(academicStyleTable) {\n      this.academicStyleTableSource.next(academicStyleTable);\n    }\n\n    changeAcademicStyleUserTable(academicStyleUserTable) {\n      this.academicStyleUserTableSource.next(academicStyleUserTable);\n    }\n\n    changeAcademicStyleFeedback(academicStyleFeedback) {\n      this.academicStyleFeedback.next(academicStyleFeedback);\n    }\n\n    changeAcademicStyleAlertColor(academicStyleAlertColor) {\n      this.academicStyleAlertColor.next(academicStyleAlertColor);\n    }\n\n  }\n\n  AcademicStyleService.ɵfac = function AcademicStyleService_Factory(t) {\n    return new (t || AcademicStyleService)(i0.ɵɵinject(i1.FirebaseService));\n  };\n\n  AcademicStyleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AcademicStyleService,\n    factory: AcademicStyleService.ɵfac,\n    providedIn: 'root'\n  });\n  return AcademicStyleService;\n})();","map":null,"metadata":{},"sourceType":"module"}