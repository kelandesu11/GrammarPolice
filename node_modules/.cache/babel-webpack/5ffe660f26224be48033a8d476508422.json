{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../data.service\";\nimport * as i2 from \"../../../services/grammar.service\";\nimport * as i3 from \"../../../services/academicstyle.service\";\nimport * as i4 from \"../../../services/eggcorns.service\";\nimport * as i5 from \"../../../services/nominalizations.service\";\nimport * as i6 from \"../../../services/passivevoice.service\";\nimport * as i7 from \"../../../services/wordiness.service\";\nimport * as i8 from \"../../../services/sentences.service\";\nimport * as i9 from \"../../../services/transitions.service\";\nimport * as i10 from \"@angular/material/toolbar\";\nimport * as i11 from \"@angular/router\";\nimport * as i12 from \"@angular/common\";\n\nfunction GrammarFixComponent_tr_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tableData_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tableData_r2);\n  }\n}\n\nfunction GrammarFixComponent_tr_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tableData_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tableData_r3);\n  }\n}\n\nexport let GrammarFixComponent = /*#__PURE__*/(() => {\n  class GrammarFixComponent {\n    constructor(data, grammar, academic, eggcorns, nominalizations, passivevoice, wordiness, sentences, transitions) {\n      this.data = data;\n      this.grammar = grammar;\n      this.academic = academic;\n      this.eggcorns = eggcorns;\n      this.nominalizations = nominalizations;\n      this.passivevoice = passivevoice;\n      this.wordiness = wordiness;\n      this.sentences = sentences;\n      this.transitions = transitions;\n      this.title = 'Grammar-Fix'; // Grammar\n\n      this.grammarFeedback = ' ';\n    }\n\n    startOverClick() {\n      this.data.changeMessage('');\n    } //returns the element that is displayed in the html\n\n\n    getContent() {\n      return document.getElementById('userinput').innerHTML;\n    }\n\n    reHighlight() {\n      // Reset every time you hit re-highlight\n      this.data.changeTotalSentences(0);\n      this.data.changeGrade(0);\n      this.grammar.changeTotalGrammar(0);\n      /* this.passivevoice.changePassiveVoiceNumber(0);\r\n      this.wordiness.changeWordinessNumber(0);\r\n      this.transitions.changeTotalTransitions(0);\r\n      this.academic.changeTotalNonAcademic(0);\r\n      this.eggcorns.changeTotalEggcorns(0);\r\n      this.nominalizations.changeNominalizationsNumber(0);\r\n      this.sentences.changeSentencesNumber(0); */\n      // Clear -- Reset\n\n      this.grammarUserTable = {\n        find: [],\n        suggestion: []\n      }; // variables\n      // user text = paragraph from the html file\n\n      let userText = this.getContent();\n      let aLetter = false; // This function checks if there is at least one letter inputed\n\n      const validateChar = function () {\n        if (/[a-zA-Z]/.test(userText)) {\n          aLetter = true;\n        }\n      }; // calling function - checker\n\n\n      validateChar(); // alters! or proceed to overview\n\n      if (userText === '') {\n        alert('Please fill out the text area');\n      } else if (aLetter === false) {\n        alert('Please enter at least one letter');\n      } else {\n        this.data.changeMessage(userText); // Find total sentences in text\n\n        for (let i = 0; i < userText.length; i++) {\n          if (userText.charAt(i) === '.' || userText.charAt(i) === '!' || userText.charAt(i) === '?') {\n            this.data.changeTotalSentences(this.totalSentences + 1);\n          }\n        } // fixes\n\n\n        this.grammarFix(userText);\n      }\n    }\n\n    ngOnInit() {\n      this.data.currentMessage.subscribe(message => this.message = message);\n      this.data.currentTotalSentences.subscribe(totalSentences => this.totalSentences = totalSentences);\n      this.data.currentTotalSentences.subscribe(totalSentences => this.totalSentences = totalSentences);\n      this.data.currentGradeAlertColor.subscribe(gradeAlertColor => this.gradeAlertColor = gradeAlertColor);\n      this.data.currentGradeFeedback.subscribe(gradeFeedback => this.gradeFeedback = gradeFeedback); // Services\n\n      this.grammarService();\n    }\n\n    grammarFix(userText) {\n      // find grammar traps in user text\n      for (const fix in this.grammarTable) {\n        // changing user text to lower Case to match with grammarTable\n        if (userText.toLocaleLowerCase().includes(fix)) {\n          this.grammar.changeTotalGrammar(this.totalGrammar + 1);\n          this.grammarUserTable.find.push('• ' + fix + ' ⟶ ' + this.grammarTable[fix]); //highlight fix\n\n          this.highlight(fix, this.grammarTable[fix]); // this.grammarUserTable.suggestion.push(\" ⟶ \" + this.grammarTable[fix]);\n\n          this.grammar.changeGrammarUserTable(this.grammarUserTable);\n        }\n      }\n\n      this.grammarScore = this.totalGrammar / this.totalSentences * 100;\n\n      if (isNaN(this.grammarScore) || this.grammarScore === Infinity) {\n        this.grammarScore = 0;\n      }\n\n      try {\n        if (this.totalGrammar == 0) {\n          this.grammarAlertColor = 'green';\n          this.grammarFeedback = \"Woohoo! We didn't find any obvious grammark errors. However, \" + 'beware: Grammark does not check for fragments, comma splices, subject-verb errors, ' + \"number and pronoun problems. What's the best way to find grammar errors? Read your writing aloud.\";\n        } else if (this.totalGrammar > 0) {\n          this.grammarAlertColor = 'red';\n          this.grammarFeedback = 'Your writing includes words or phrases usually considered to be grammar errors.';\n        }\n\n        if (this.totalSentences === 0) {\n          throw new Error('');\n        }\n      } catch (e) {\n        this.grammarFeedback = 'Make sure you enter at least one sentence.';\n        this.grammarAlertColor = 'orange';\n        this.grammarScore = 0;\n      }\n\n      this.grammar.changeGrammarScore(Math.round(this.grammarScore * 10) / 10);\n      this.grammar.changeGrammarFeedback(this.grammarFeedback);\n      this.grammar.changeGrammarAlertColor(this.grammarAlertColor);\n    }\n\n    grammarService() {\n      this.grammar.currentGrammarAlertColor.subscribe(grammarAlertColor => this.grammarAlertColor = grammarAlertColor);\n      this.grammar.currentGrammarFeedback.subscribe(grammarFeedback => this.grammarFeedback = grammarFeedback);\n      this.grammar.currentTotalGrammar.subscribe(totalGrammar => this.totalGrammar = totalGrammar);\n      this.grammar.currentGrammarTable.subscribe(grammarTable => this.grammarTable = grammarTable);\n      this.grammar.currentGrammarUserTable.subscribe(grammarUserTable => this.grammarUserTable = grammarUserTable);\n      this.grammar.currentGrammarScore.subscribe(grammarScore => this.grammarScore = grammarScore);\n    }\n\n    highlight(text, fixText) {\n      //hold the message from the html textbox with id= userinput\n      var paragraph = document.getElementById('userinput'); //dynamic/custom regex expression -> only way to use variable inside regex\n\n      let re = new RegExp(`\\\\b${text}\\\\b`, 'gi'); //replace with -> span and highlight, and sub span with fixText\n\n      paragraph.innerHTML = paragraph.innerHTML.replace(re, '<span class=\"highlight\" >' + text + '<span class=\"feedbackPopup\" >' + fixText + '</span>' + ' </span>');\n    }\n\n  }\n\n  GrammarFixComponent.ɵfac = function GrammarFixComponent_Factory(t) {\n    return new (t || GrammarFixComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.GrammarService), i0.ɵɵdirectiveInject(i3.AcademicStyleService), i0.ɵɵdirectiveInject(i4.EggcornService), i0.ɵɵdirectiveInject(i5.NominalizationsService), i0.ɵɵdirectiveInject(i6.PassivevoiceService), i0.ɵɵdirectiveInject(i7.WordinessService), i0.ɵɵdirectiveInject(i8.SentencesService), i0.ɵɵdirectiveInject(i9.TransitionsService));\n  };\n\n  GrammarFixComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GrammarFixComponent,\n    selectors: [[\"app-grammar-fix\"]],\n    decls: 48,\n    vars: 9,\n    consts: [[\"color\", \"white\", 1, \"navbar\"], [\"routerLink\", \"../../overview\", 1, \"linkedpages\"], [\"routerLink\", \"../passive-voice-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../wordiness-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../academic-style-fix\", 1, \"linkedpages\"], [3, \"mouseenter\"], [\"routerLink\", \"../grammar-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../nominalizations-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../sentences-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../eggcorns-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../transitions-fix\", 1, \"linkedpages\"], [\"routerLink\", \"\", 1, \"linkedpages\", 3, \"click\"], [1, \"alert-box\"], [1, \"box\"], [\"color\", \"white\", 1, \"category\"], [1, \"title\"], [1, \"description\"], [1, \"column1\"], [\"id\", \"userinput\", \"name\", \"userinput\"], [1, \"column2\"], [1, \"feedback\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function GrammarFixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n        i0.ɵɵelementStart(1, \"a\", 1);\n        i0.ɵɵtext(2, \"Overview\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"a\", 2);\n        i0.ɵɵtext(4, \"Passive Voice\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"a\", 3);\n        i0.ɵɵtext(6, \"Wordiness\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"a\", 4);\n        i0.ɵɵtext(8, \"Academic Style\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵlistener(\"mouseenter\", function GrammarFixComponent_Template_div_mouseenter_9_listener() {\n          return ctx.reHighlight();\n        });\n        i0.ɵɵelementStart(10, \"a\", 6);\n        i0.ɵɵtext(11, \"Grammar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"a\", 7);\n        i0.ɵɵtext(13, \"Nominalizations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"a\", 8);\n        i0.ɵɵtext(15, \"Sentences\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"a\", 9);\n        i0.ɵɵtext(17, \"Eggcorns\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"a\", 10);\n        i0.ɵɵtext(19, \"Transitions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function GrammarFixComponent_Template_a_click_20_listener() {\n          return ctx.startOverClick();\n        });\n        i0.ɵɵtext(21, \"Start Over\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"body\");\n        i0.ɵɵelementStart(23, \"div\", 12);\n        i0.ɵɵelementStart(24, \"h5\", 13);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"b\", 13);\n        i0.ɵɵtext(27, \"Goal: 0 errors \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-toolbar\", 14);\n        i0.ɵɵelementStart(29, \"mat-toolbar-row\", 15);\n        i0.ɵɵelementStart(30, \"b\");\n        i0.ɵɵtext(31, \"Grammar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"mat-toolbar-row\", 16);\n        i0.ɵɵtext(33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\");\n        i0.ɵɵelementStart(35, \"div\", 17);\n        i0.ɵɵelementStart(36, \"p\", 18);\n        i0.ɵɵtext(37);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 19);\n        i0.ɵɵelementStart(40, \"h1\", 20);\n        i0.ɵɵelementStart(41, \"b\");\n        i0.ɵɵtext(42);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"table\");\n        i0.ɵɵelementStart(44, \"td\");\n        i0.ɵɵtemplate(45, GrammarFixComponent_tr_45_Template, 2, 1, \"tr\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"td\");\n        i0.ɵɵtemplate(47, GrammarFixComponent_tr_47_Template, 2, 1, \"tr\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵstyleProp(\"background-color\", ctx.grammarAlertColor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.totalGrammar, \" instances (\", ctx.grammarScore, \"% of sentences)\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.grammarFeedback);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.message);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Grammar Traps Found - \", ctx.totalGrammar, \" instance(s)\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.grammarUserTable.find);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.grammarUserTable.suggestion);\n      }\n    },\n    directives: [i10.MatToolbar, i11.RouterLinkWithHref, i10.MatToolbarRow, i12.NgForOf],\n    styles: [\".linkedpages{text-decoration:none;display:inline-block;border-left:black groove;border-right:black groove;width:10%;text-align:center;color:#000;font-size:16px}body{background-color:#f3fff6;font-family:Futura,Trebuchet MS,Arial,sans-serif}.navbar{margin:0;padding:0}.category{margin:20px 0;padding:10px 20px}.title{font-size:36px}.description{font-size:20px}.column1{float:left;width:65%;padding-left:20px}.column2{float:left;width:30.5%;background-color:#fff;padding:20px}#userinput{height:300px;min-height:100px;width:96.5%;resize:none;border-width:thick;padding:5px;font-size:14px}.rehighlight{display:flex;align-items:center;justify-content:center;background-color:#409e7f;color:#000;width:300px;height:50px;border-radius:14px;font-size:17px;font-weight:bold;display:table-cell}.rehighlight:hover{background-color:#00704a;border-color:#fff;color:#fff}.feedback{font-size:30px}.linkedpages{color:#000;text-decoration:none;border-left:black groove;display:inline-block;width:135px;text-align:center}.linkedpages:hover{background-color:#9ca6a6;border-radius:10px;color:#fff}.alert-box{background-color:#d39898;min-width:300px;margin-left:850px;text-align:left;margin-bottom:-92px;padding:10px;position:relative;border-radius:10px;margin-top:20px}td{padding-right:10px}.box{font-size:20px}.highlight{background-color:#d39898;font-family:Futura,Trebuchet MS,Arial,sans-serif}.feedbackPopup{visibility:hidden;background-color:#000;color:#fff;text-align:center;border-radius:6px;padding:5px 10px;position:absolute;z-index:1}.highlight:hover .feedbackPopup{visibility:visible}.feedbackPopup .highlight{background-color:#000}.feedbackPopup .highlight .feedbackPopup{visibility:hidden}\\n\"],\n    encapsulation: 2\n  });\n  return GrammarFixComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}