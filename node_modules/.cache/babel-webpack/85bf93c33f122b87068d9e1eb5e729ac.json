{"ast":null,"code":"import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport * as i0 from \"@angular/core\";\nexport let SentencesService = /*#__PURE__*/(() => {\n  class SentencesService {\n    constructor() {\n      this.sentencesAlertColorSource = new BehaviorSubject(\"\");\n      this.currentSentencesAlertColor = this.sentencesAlertColorSource.asObservable();\n      this.sentencesFeedbackSource = new BehaviorSubject(\"\");\n      this.currentSentencesFeedback = this.sentencesFeedbackSource.asObservable();\n      this.sentencesScoreSource = new BehaviorSubject(0);\n      this.currentSentencesScore = this.sentencesScoreSource.asObservable();\n      this.sentencesNumberSource = new BehaviorSubject(0);\n      this.currentSentencesNumber = this.sentencesNumberSource.asObservable();\n      this.sentencesUserTableSource = new BehaviorSubject({});\n      this.currentSentencesUserTable = this.sentencesUserTableSource.asObservable();\n      this.sentencesTableSource = new BehaviorSubject({\n        And: '',\n        But: '',\n        Or: ''\n      });\n      this.currentSentencesTable = this.sentencesTableSource.asObservable();\n    }\n\n    changeSentencesAlertColor(sentencesAlertColor) {\n      this.sentencesAlertColorSource.next(sentencesAlertColor);\n    }\n\n    changeSentencesFeedback(sentencesFeedback) {\n      this.sentencesFeedbackSource.next(sentencesFeedback);\n    }\n\n    changeSentencesScore(sentencesScore) {\n      this.sentencesScoreSource.next(sentencesScore);\n    }\n\n    changeSentencesNumber(sentencesNumber) {\n      this.sentencesNumberSource.next(sentencesNumber);\n    }\n\n    changeSentencesUserTable(sentencesUserTable) {\n      this.sentencesUserTableSource.next(sentencesUserTable);\n    }\n\n    changeSentencesTable(sentencesTable) {\n      this.sentencesTableSource.next(sentencesTable);\n    }\n\n  }\n\n  SentencesService.ɵfac = function SentencesService_Factory(t) {\n    return new (t || SentencesService)();\n  };\n\n  SentencesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SentencesService,\n    factory: SentencesService.ɵfac,\n    providedIn: 'root'\n  });\n  return SentencesService;\n})();","map":null,"metadata":{},"sourceType":"module"}