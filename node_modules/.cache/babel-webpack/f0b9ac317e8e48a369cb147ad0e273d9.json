{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../data.service\";\nimport * as i2 from \"../../../services/academicstyle.service\";\nimport * as i3 from \"../../../services/eggcorns.service\";\nimport * as i4 from \"../../../services/grammar.service\";\nimport * as i5 from \"../../../services/nominalizations.service\";\nimport * as i6 from \"../../../services/passivevoice.service\";\nimport * as i7 from \"../../../services/wordiness.service\";\nimport * as i8 from \"../../../services/sentences.service\";\nimport * as i9 from \"../../../services/transitions.service\";\nimport * as i10 from \"@angular/material/toolbar\";\nimport * as i11 from \"@angular/router\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@angular/material/card\";\n\nfunction PassiveVoiceFixComponent_mat_card_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 23);\n    i0.ɵɵelementStart(1, \"mat-card-title\");\n    i0.ɵɵtext(2, \"Generic Feedback\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-content\");\n    i0.ɵɵelementStart(4, \"b\");\n    i0.ɵɵtext(5, \"Compare:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ul\");\n    i0.ɵɵelementStart(7, \"li\");\n    i0.ɵɵtext(8, \"\\\"Mark ate Planet Mars.\\\" (active)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"li\");\n    i0.ɵɵtext(10, \"\\\"Planet Mars was eaten by Mark\\\" (passive)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"b\");\n    i0.ɵɵtext(12, \"What to do:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtext(14, \" Think \\\"who did what\\\", not \\\"what was done by whom\\\"(you\\\\'ll probably need to reverse the sentence order). In grammar-speak, avoid \");\n    i0.ɵɵelementStart(15, \"i\");\n    i0.ɵɵtext(16, \"is, was, were or be, being, been\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17, \" followed by a past tense verb. \");\n    i0.ɵɵelement(18, \"br\");\n    i0.ɵɵelementStart(19, \"b\");\n    i0.ɵɵtext(20, \"Example fixes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"ul\");\n    i0.ɵɵelementStart(22, \"li\");\n    i0.ɵɵtext(23, \"it \");\n    i0.ɵɵelementStart(24, \"mark\");\n    i0.ɵɵelementStart(25, \"del\");\n    i0.ɵɵtext(26, \"is\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(27, \" accept\");\n    i0.ɵɵelementStart(28, \"del\");\n    i0.ɵɵtext(29, \"ed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \" that... --> we accept that...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"li\");\n    i0.ɵɵtext(32, \"needs to \");\n    i0.ɵɵelementStart(33, \"mark\");\n    i0.ɵɵelementStart(34, \"del\");\n    i0.ɵɵtext(35, \"be\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(36, \" fund\");\n    i0.ɵɵelementStart(37, \"del\");\n    i0.ɵɵtext(38, \"ed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \" by Britain... --> Britain needs to fund...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PassiveVoiceFixComponent_tr_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tableData_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tableData_r3);\n  }\n}\n\nfunction PassiveVoiceFixComponent_tr_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tableData_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tableData_r4);\n  }\n}\n\nexport let PassiveVoiceFixComponent = /*#__PURE__*/(() => {\n  class PassiveVoiceFixComponent {\n    constructor(data, academic, eggcorns, grammar, nominalizations, passivevoice, wordiness, sentences, transitions) {\n      this.data = data;\n      this.academic = academic;\n      this.eggcorns = eggcorns;\n      this.grammar = grammar;\n      this.nominalizations = nominalizations;\n      this.passivevoice = passivevoice;\n      this.wordiness = wordiness;\n      this.sentences = sentences;\n      this.transitions = transitions;\n      this.title = 'Passive-Voice-Fix';\n    }\n\n    startOverClick() {\n      this.data.changeMessage('');\n    } //returns the element that is displayed in the html\n\n\n    getContent() {\n      return document.getElementById('userinput').innerHTML;\n    }\n\n    reHighlight() {\n      if (this.needHighlight) {\n        this.needHighlight = false; // Reset every time you hit re-highlight\n\n        this.data.changeTotalSentences(0);\n        this.data.changeGrade(0);\n        this.passivevoice.changePassiveVoiceNumber(0);\n        /* this.wordiness.changeWordinessNumber(0);\r\n         this.transitions.changeTotalTransitions(0);\r\n         this.academic.changeTotalNonAcademic(0);\r\n         this.grammar.changeTotalGrammar(0);\r\n         this.eggcorns.changeTotalEggcorns(0);\r\n         this.nominalizations.changeNominalizationsNumber(0);\r\n         this.sentences.changeSentencesNumber(0); */\n        // Clear -- Reset\n\n        this.passiveVoiceUserTable = {\n          find: [],\n          suggestion: []\n        }; // variables\n        // user text = paragraph from the html file\n\n        let userText = this.getContent();\n        let aLetter = false; // This function checks if there is at least one letter inputed\n\n        const validateChar = function () {\n          if (/[a-zA-Z]/.test(userText)) {\n            aLetter = true;\n          }\n        }; // calling function - checker\n\n\n        validateChar(); // alters! or proceed to overview\n\n        if (userText === '') {\n          alert('Please fill out the text area');\n        } else if (aLetter === false) {\n          alert('Please enter at least one letter');\n        } else {\n          this.data.changeMessage(userText); // Find total sentences in text\n\n          for (let i = 0; i < userText.length; i++) {\n            if (userText.charAt(i) === '.' || userText.charAt(i) === '!' || userText.charAt(i) === '?') {\n              this.data.changeTotalSentences(this.totalSentences + 1);\n            }\n          } // Fixes\n\n\n          this.passiveVoiceFix(userText);\n        }\n      }\n    }\n\n    ngOnInit() {\n      this.data.currentMessage.subscribe(message => this.message = message);\n      this.data.currentTotalSentences.subscribe(totalSentences => this.totalSentences = totalSentences); // Service\n\n      this.passiveVoiceService();\n      this.needHighlight = true;\n    }\n\n    passiveVoiceFix(userText) {\n      // tslint:disable-next-line: forin\n      for (const fix in this.passiveVoiceTable) {\n        // tslint:disable-next-line: forin\n        for (const helper in this.passiveVoiceHelperTable) {\n          // String\n          const compareString = helper + fix;\n\n          if (userText.includes(compareString)) {\n            this.passivevoice.changePassiveVoiceNumber(this.passiveVoiceNumber + 1);\n            this.passiveVoiceUserTable.find.push('• ' + compareString); // this.passiveVoiceUserTable.suggestion.push(\" ⟶ \" + this.passiveVoiceTable[fix]);\n\n            this.passivevoice.changePassiveVoiceUserTable(this.passiveVoiceUserTable);\n            this.highlight(fix);\n          }\n        }\n      }\n\n      this.passiveVoiceScore = this.passiveVoiceNumber / this.totalSentences * 100;\n\n      if (isNaN(this.passiveVoiceScore) || this.passiveVoiceScore === Infinity) {\n        this.passiveVoiceScore = 0;\n      }\n\n      try {\n        if (this.passiveVoiceScore > 0) {\n          this.passiveVoiceFeedback = 'Generally, writing is clearer in active voice.';\n          this.passiveVoiceAlertColor = 'red';\n        } else {\n          this.passiveVoiceFeedback = 'Your writing passed the criterion for passive sentences. Congrats!';\n          this.passiveVoiceAlertColor = 'green';\n        }\n\n        if (this.totalSentences === 0) {\n          throw new Error('');\n        }\n      } catch (e) {\n        this.passiveVoiceFeedback = 'Make sure you enter at least one sentence.';\n        this.passiveVoiceAlertColor = 'orange';\n        this.passiveVoiceScore = 0;\n      }\n\n      this.passivevoice.changePassiveVoiceFeedback(this.passiveVoiceFeedback);\n      this.passivevoice.changePassiveVoiceScore(Math.round(this.passiveVoiceScore * 10) / 10);\n      this.passivevoice.changePassiveVoiceAlertColor(this.passiveVoiceAlertColor);\n    }\n\n    passiveVoiceService() {\n      this.passivevoice.currentPassiveVoiceNumber.subscribe(passiveVoiceNumber => this.passiveVoiceNumber = passiveVoiceNumber);\n      this.passivevoice.currentPassiveVoiceTable.subscribe(passiveVoiceTable => this.passiveVoiceTable = passiveVoiceTable);\n      this.passivevoice.currentPassiveVoiceHelperTable.subscribe(passiveVoiceHelperTable => this.passiveVoiceHelperTable = passiveVoiceHelperTable);\n      this.passivevoice.currentPassiveVoiceUserTable.subscribe(passiveVoiceUserTable => this.passiveVoiceUserTable = passiveVoiceUserTable);\n      this.passivevoice.currentPassiveVoiceAlertColor.subscribe(passiveVoiceAlertColor => this.passiveVoiceAlertColor = passiveVoiceAlertColor);\n      this.passivevoice.currentPassiveVoiceFeedback.subscribe(passiveVoiceFeedback => this.passiveVoiceFeedback = passiveVoiceFeedback);\n      this.passivevoice.currentPassiveVoiceScore.subscribe(passiveVoiceScore => this.passiveVoiceScore = passiveVoiceScore);\n    }\n\n    highlight(text) {\n      //hold the message from the html textbox with id= userinput\n      var paragraph = document.getElementById('userinput'); //dynamic/custom regex expression -> only way to use variable inside regex\n\n      let re = new RegExp(`\\\\b${text}\\\\b`, 'gi'); //replace with -> span and highlight, and sub span with fixText\n\n      paragraph.innerHTML = paragraph.innerHTML.replace(re, '<span class=\"highlight\" >' + text + ' </span>');\n    }\n\n  }\n\n  PassiveVoiceFixComponent.ɵfac = function PassiveVoiceFixComponent_Factory(t) {\n    return new (t || PassiveVoiceFixComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.AcademicStyleService), i0.ɵɵdirectiveInject(i3.EggcornService), i0.ɵɵdirectiveInject(i4.GrammarService), i0.ɵɵdirectiveInject(i5.NominalizationsService), i0.ɵɵdirectiveInject(i6.PassivevoiceService), i0.ɵɵdirectiveInject(i7.WordinessService), i0.ɵɵdirectiveInject(i8.SentencesService), i0.ɵɵdirectiveInject(i9.TransitionsService));\n  };\n\n  PassiveVoiceFixComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PassiveVoiceFixComponent,\n    selectors: [[\"app-passive-voice-fix\"]],\n    decls: 47,\n    vars: 10,\n    consts: [[3, \"mouseenter\"], [\"color\", \"white\", 1, \"navbar\"], [\"routerLink\", \"../../overview\", 1, \"linkedpages\"], [\"routerLink\", \"../passive-voice-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../wordiness-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../academic-style-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../grammar-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../nominalizations-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../sentences-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../eggcorns-fix\", 1, \"linkedpages\"], [\"routerLink\", \"../transitions-fix\", 1, \"linkedpages\"], [\"routerLink\", \"\", 1, \"linkedpages\", 3, \"click\"], [1, \"alert-box\"], [1, \"box\"], [\"color\", \"white\", 1, \"category\"], [1, \"title\"], [1, \"description\"], [1, \"column1\"], [\"class\", \"inDepth\", 4, \"ngIf\"], [\"id\", \"userinput\", \"name\", \"userinput\"], [1, \"column2\"], [1, \"feedback\"], [4, \"ngFor\", \"ngForOf\"], [1, \"inDepth\"]],\n    template: function PassiveVoiceFixComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mouseenter\", function PassiveVoiceFixComponent_Template_div_mouseenter_0_listener() {\n          return ctx.reHighlight();\n        });\n        i0.ɵɵelementStart(1, \"mat-toolbar\", 1);\n        i0.ɵɵelementStart(2, \"a\", 2);\n        i0.ɵɵtext(3, \"Overview\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"a\", 3);\n        i0.ɵɵtext(5, \"Passive Voice\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"a\", 4);\n        i0.ɵɵtext(7, \"Wordiness\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"a\", 5);\n        i0.ɵɵtext(9, \"Academic Style\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"a\", 6);\n        i0.ɵɵtext(11, \"Grammar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"a\", 7);\n        i0.ɵɵtext(13, \"Nominalizations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"a\", 8);\n        i0.ɵɵtext(15, \"Sentences\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"a\", 9);\n        i0.ɵɵtext(17, \"Eggcorns\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"a\", 10);\n        i0.ɵɵtext(19, \"Transitions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function PassiveVoiceFixComponent_Template_a_click_20_listener() {\n          return ctx.startOverClick();\n        });\n        i0.ɵɵtext(21, \"Start Over\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"body\");\n        i0.ɵɵelementStart(23, \"div\", 12);\n        i0.ɵɵelementStart(24, \"b\", 13);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-toolbar\", 14);\n        i0.ɵɵelementStart(27, \"mat-toolbar-row\", 15);\n        i0.ɵɵelementStart(28, \"b\");\n        i0.ɵɵtext(29, \"Passive Voice\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-toolbar-row\", 16);\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\");\n        i0.ɵɵelementStart(33, \"div\", 17);\n        i0.ɵɵtemplate(34, PassiveVoiceFixComponent_mat_card_34_Template, 40, 0, \"mat-card\", 18);\n        i0.ɵɵelementStart(35, \"p\", 19);\n        i0.ɵɵtext(36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 20);\n        i0.ɵɵelementStart(39, \"h1\", 21);\n        i0.ɵɵelementStart(40, \"b\");\n        i0.ɵɵtext(41);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"table\");\n        i0.ɵɵelementStart(43, \"td\");\n        i0.ɵɵtemplate(44, PassiveVoiceFixComponent_tr_44_Template, 2, 1, \"tr\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"td\");\n        i0.ɵɵtemplate(46, PassiveVoiceFixComponent_tr_46_Template, 2, 1, \"tr\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵstyleProp(\"background-color\", ctx.passiveVoiceAlertColor);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.passiveVoiceNumber, \" instances (\", ctx.passiveVoiceScore, \"% of sentences)\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.passiveVoiceFeedback);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.passiveVoiceScore > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.message);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Passive Voice Found - \", ctx.passiveVoiceNumber, \" error(s)\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.passiveVoiceUserTable.find);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.passiveVoiceUserTable.suggestion);\n      }\n    },\n    directives: [i10.MatToolbar, i11.RouterLinkWithHref, i10.MatToolbarRow, i12.NgIf, i12.NgForOf, i13.MatCard, i13.MatCardTitle, i13.MatCardContent],\n    styles: [\".linkedpages{text-decoration:none;display:inline-block;border-left:black groove;border-right:black groove;width:10%;text-align:center;color:#000;font-size:16px}body{background-color:#f3fff6;font-family:Futura,Trebuchet MS,Arial,sans-serif}.navbar{margin:0;padding:0}.category{margin:20px 0;padding:10px 20px}.description{font-size:20px}.column1{float:left;width:65%;padding-left:20px}.column2{float:left;width:30.5%;background-color:#fff;padding:20px}#userinput{height:300px;min-height:100px;width:96.5%;resize:none;border-width:thick;padding:5px;font-size:14px}.rehighlight{display:flex;align-items:center;justify-content:center;background-color:#409e7f;color:#000;width:300px;height:50px;border-radius:14px;font-size:17px;font-weight:bold;display:table-cell}.rehighlight:hover{background-color:#00704a;border-color:#fff;color:#fff}.linkedpages{color:#000;text-decoration:none;border-left:black groove;display:inline-block;width:135px;text-align:center}.linkedpages:hover{background-color:#9ca6a6;border-radius:10px;color:#fff}.title{font-size:36px}.feedback{font-size:30px}.alert-box{background-color:#d39898;min-width:300px;margin-left:850px;text-align:left;margin-bottom:-92px;padding:10px;position:relative;border-radius:10px;margin-top:20px}td{padding-right:10px}.box{font-size:20px}.highlight{background-color:#d39898;font-family:Futura,Trebuchet MS,Arial,sans-serif}.feedbackPopup{visibility:hidden;background-color:#000;color:#fff;text-align:center;border-radius:6px;padding:5px 10px;position:absolute;z-index:1}.highlight:hover .feedbackPopup{visibility:visible}.feedbackPopup .highlight{background-color:#000}.feedbackPopup .highlight .feedbackPopup{visibility:hidden}.inDepth{background:#f5f5f5;width:95%}\\n\"],\n    encapsulation: 2\n  });\n  return PassiveVoiceFixComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}